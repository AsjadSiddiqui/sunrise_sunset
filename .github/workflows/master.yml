name: Test, Analysis, Tag
on:
  push:
    branches: [ master ]

jobs:

  check_version:
    runs-on: ubuntu-latest
    name: 'Check Version Tag'
    steps:
      - uses: actions/checkout@v1
      - name: 'Get Latest Version'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@master"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        continue-on-error: true  
      - name: 'Print Latest Version'
        run: echo ${{ steps.previoustag.outputs.tag }}
      - name: 'Get New Version'
        id: config
        uses: CumulusDS/get-yaml-paths-action@v0.0.3
        with:
          file: pubspec.yaml
          version_name: version
      - name: 'Print New Version'
        run: echo ${{ steps.config.outputs.version_name }}  
      - name: The version from your pubspec.yaml is the same as Master, Please update the version
        if: steps.config.outputs.version_name == steps.previoustag.outputs.tag
        run: exit 1
      - shell: bash
        run: |
          echo ${{ steps.config.outputs.version_name }}  > version.txt
      - name: 'Upload New Version'
        uses: actions/upload-artifact@v1
        with:
          name: home
          path: version.txt  
          
  run_tests:
    needs: [check_version]
    name: 'Run Tests'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - run: flutter pub get
      # run  flutter widgets tests  and unit tests
      - run: flutter test --coverage
      # Upload coverage reports to Codecov
      # https://github.com/marketplace/actions/codecov
      - name: 'Upload coverage to Codecov'
        if: success()
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage/lcov.info

  package-analysis:
    needs: [run_tests]
    name: 'Run Analysis'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: 'Get Latest Version'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@master"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        continue-on-error: true  
      - name: 'Print Latest Version'
        run: echo ${{ steps.previoustag.outputs.tag }}
      - name: 'Get New Version'
        id: config
        uses: CumulusDS/get-yaml-paths-action@v0.0.3
        with:
          # Required:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  tag:
    needs: [package-analysis]
    name: 'Tag Version'
    runs-on: ubuntu-latest
    steps:
    - name: 'Download New Version'
      uses: actions/download-artifact@v1
      with:
        name: home
    - name: Set and Tag the new version
      shell: bash
      run: echo "::set-env name=RELEASE_VERSION::$(cat home/version.txt)"
    - uses: tvdias/github-tagger@v0.0.1
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        tag: ${{env.RELEASE_VERSION}}
